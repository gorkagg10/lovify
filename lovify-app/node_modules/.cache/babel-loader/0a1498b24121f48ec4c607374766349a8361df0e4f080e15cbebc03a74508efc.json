{"ast":null,"code":"var _jsxFileName = \"/Users/gorka/lovify/lovify-app/src/views/ChatPanel.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPanel() {\n  const selectedUser = {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-panel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-panel__header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"chat-panel__logo\",\n        src: \"/logo.png\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = ChatPanel;\nexport default ChatPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"names":["ChatPanel","selectedUser","_jsxDEV","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gorka/lovify/lovify-app/src/views/ChatPanel.js"],"sourcesContent":["function ChatPanel() {\n    const selectedUser = {\n\n    }\n\n    return (\n        <div className=\"chat-panel\">\n            <div className=\"chat-panel__header\">\n                <img className=\"chat-panel__logo\" src=\"/logo.png\" alt=\"logo\" />\n            </div>\n        </div>\n    )\n}\n\nexport default ChatPanel;"],"mappings":";;AAAA,SAASA,SAASA,CAAA,EAAG;EACjB,MAAMC,YAAY,GAAG,CAErB,CAAC;EAED,oBACIC,OAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,QAAA,eACvBF,OAAA;MAAKC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAC/BF,OAAA;QAAKC,SAAS,EAAC,kBAAkB;QAACE,GAAG,EAAC,WAAW;QAACC,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACC,EAAA,GAZQX,SAAS;AAclB,eAAeA,SAAS;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}